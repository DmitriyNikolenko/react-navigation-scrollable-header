var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.default=withScrollableHeader;var _classCallCheck2=_interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));var _createClass2=_interopRequireDefault(require("@babel/runtime/helpers/createClass"));var _possibleConstructorReturn2=_interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));var _getPrototypeOf3=_interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));var _inherits2=_interopRequireDefault(require("@babel/runtime/helpers/inherits"));var _extends2=_interopRequireDefault(require("@babel/runtime/helpers/extends"));var _react=_interopRequireDefault(require("react"));var _propTypes=_interopRequireDefault(require("prop-types"));var _reactNative=require("react-native");var _hoistNonReactStatics=_interopRequireDefault(require("hoist-non-react-statics"));var _defaultOptions=_interopRequireDefault(require("./defaultOptions"));var _helpers=require("./helpers");var _jsxFileName="/Users/mobileios/Documents/projects/react-navigation-scrollable-header/src/withScrollableHeader.js";function withScrollableHeader(customOptions){var _Object$assign=(0,_extends2.default)({},_defaultOptions.default,customOptions),minHeight=_Object$assign.minHeight,maxHeight=_Object$assign.maxHeight,scrollEventThrottle=_Object$assign.scrollEventThrottle,color=_Object$assign.color;var scrolledHeight=maxHeight-minHeight;return function(WrappedScreen){var ScrolledHeaderWrapper=function(_React$Component){(0,_inherits2.default)(ScrolledHeaderWrapper,_React$Component);function ScrolledHeaderWrapper(){var _getPrototypeOf2;var _this;(0,_classCallCheck2.default)(this,ScrolledHeaderWrapper);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=(0,_possibleConstructorReturn2.default)(this,(_getPrototypeOf2=(0,_getPrototypeOf3.default)(ScrolledHeaderWrapper)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={scrollY:new _reactNative.Animated.Value(0)};_this.clamp=_reactNative.Animated.diffClamp(_this.state.scrollY,0,scrolledHeight);_this.height=_this.clamp.interpolate({inputRange:[0,scrolledHeight],outputRange:[customOptions.maxHeight,minHeight]});_this.progress=_this.clamp.interpolate({inputRange:[0,scrolledHeight],outputRange:[0,1]});_this.regress=_this.clamp.interpolate({inputRange:[0,scrolledHeight],outputRange:[1,0]});_this.collapsed=_this.clamp.interpolate({inputRange:[0,scrolledHeight*0.9,scrolledHeight],outputRange:[0,0,1]});_this.appHeaderProps={height:_this.height,progress:_this.progress,regress:_this.regress,collapsed:_this.collapsed,minHeight:minHeight,maxHeight:maxHeight,color:color};_this.orientationListner=function(_ref){var window=_ref.window;_this.props.navigation.setParams({isLandscape:(0,_helpers.isOrientationLandscape)(window)});};_this.handleScroll=_reactNative.Animated.event([{nativeEvent:{contentOffset:{y:_this.state.scrollY}}}],{isInteraction:false});_this.scrolledHeaderProps={onScroll:_this.handleScroll,scrollEventThrottle:scrollEventThrottle,bounces:false};return _this;}(0,_createClass2.default)(ScrolledHeaderWrapper,[{key:"componentDidMount",value:function componentDidMount(){var navigation=this.props.navigation;navigation.setParams({scrolledHeader:this.appHeaderProps});_reactNative.Dimensions.addEventListener('change',this.orientationListner);}},{key:"componentWillUnmount",value:function componentWillUnmount(){_reactNative.Dimensions.removeEventListener('change',this.orientationListner);this.props.navigation.state.params=undefined;}},{key:"render",value:function render(){return _react.default.createElement(WrappedScreen,(0,_extends2.default)({},this.props,{scrolledHeader:this.scrolledHeaderProps,__source:{fileName:_jsxFileName,lineNumber:83}}));}}]);return ScrolledHeaderWrapper;}(_react.default.Component);ScrolledHeaderWrapper.propTypes={navigation:_propTypes.default.object.isRequired};(0,_hoistNonReactStatics.default)(ScrolledHeaderWrapper,WrappedScreen);return ScrolledHeaderWrapper;};}